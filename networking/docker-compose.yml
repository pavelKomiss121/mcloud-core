version: '3.8'

services:
  gateway:
    build:
      context: .
      args:
        SERVICE: GatewayService
    ports:
      - "8080:8080"
    networks:
      - public-net
      - internal-net
    depends_on:
      - processing
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

  processing:
    build:
      context: .
      args:
        SERVICE: ProcessingService
    networks:
      - internal-net
      - storage-net
    depends_on:
      - storage
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

  storage:
    build:
      context: .
      args:
        SERVICE: StorageService
    networks:
      - storage-net
    depends_on:
      - redis
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7-alpine
    networks:
      - storage-net
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  public-net:
    driver: bridge
  internal-net:
    driver: bridge
    internal: true
  storage-net:
    driver: bridge
    internal: true

volumes:
  db-data:
  redis_data: