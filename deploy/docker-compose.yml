version: '3.8'

services:
  webapp:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.webapp
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-Xmx128m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - app_network

  todo-app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.todoapp
    stdin_open: true
    tty: true
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/todoapp?user=postgres&password=password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:

networks:
  app_network: